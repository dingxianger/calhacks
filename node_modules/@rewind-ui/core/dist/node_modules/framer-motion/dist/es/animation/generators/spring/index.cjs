"use strict";var e=require("../../../utils/time-conversion.cjs"),s=require("../utils/velocity.cjs"),t=require("./find.cjs");const n=["duration","bounce"],o=["stiffness","damping","mass"];function i(e,s){return s.some((s=>void 0!==e[s]))}exports.spring=function({keyframes:r,restDelta:a,restSpeed:c,...l}){const u=r[0],d=r[r.length-1],h={done:!1,value:u},{stiffness:f,damping:m,mass:M,velocity:v,duration:p,isResolvedFromDuration:g}=function(e){let s={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!i(e,o)&&i(e,n)){const n=t.findSpring(e);s={...s,...n,velocity:0,mass:1},s.isResolvedFromDuration=!0}return s}(l),q=v?-e.millisecondsToSeconds(v):0,y=m/(2*Math.sqrt(f*M)),x=d-u,D=e.millisecondsToSeconds(Math.sqrt(f/M)),b=Math.abs(x)<5;let F;if(c||(c=b?.01:2),a||(a=b?.005:.5),y<1){const e=t.calcAngularFreq(D,y);F=s=>{const t=Math.exp(-y*D*s);return d-t*((q+y*D*x)/e*Math.sin(e*s)+x*Math.cos(e*s))}}else if(1===y)F=e=>d-Math.exp(-D*e)*(x+(q+D*x)*e);else{const e=D*Math.sqrt(y*y-1);F=s=>{const t=Math.exp(-y*D*s),n=Math.min(e*s,300);return d-t*((q+y*D*x)*Math.sinh(n)+e*x*Math.cosh(n))/e}}return{calculatedDuration:g&&p||null,next:e=>{const t=F(e);if(g)h.done=e>=p;else{let n=q;0!==e&&(n=y<1?s.calcGeneratorVelocity(F,e,t):0);const o=Math.abs(n)<=c,i=Math.abs(d-t)<=a;h.done=o&&i}return h.value=h.done?d:t,h}}};
