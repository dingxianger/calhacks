import{extractEventInfo as e}from"../events/event-info.js";import{addDomEvent as s}from"../events/add-dom-event.js";import{addPointerEvent as t}from"../events/add-pointer-event.js";import{Feature as n}from"../motion/features/Feature.js";import{pipe as r}from"../utils/pipe.js";import{isDragActive as i}from"./drag/utils/lock.js";import{isNodeOrChild as o}from"./utils/is-node-or-child.js";import{noop as a}from"../utils/noop.js";import{frame as c}from"../frameloop/index.js";function h(s,t){if(!t)return;const n=new PointerEvent("pointer"+s);t(n,e(n))}class p extends n{constructor(){super(...arguments),this.removeStartListeners=a,this.removeEndListeners=a,this.removeAccessibleListeners=a,this.startPointerPress=(e,s)=>{if(this.removeEndListeners(),this.isPressing)return;const n=this.node.getProps(),i=t(window,"pointerup",((e,s)=>{if(!this.checkPressEnd())return;const{onTap:t,onTapCancel:n}=this.node.getProps();c.update((()=>{o(this.node.current,e.target)?t&&t(e,s):n&&n(e,s)}))}),{passive:!(n.onTap||n.onPointerUp)}),a=t(window,"pointercancel",((e,s)=>this.cancelPress(e,s)),{passive:!(n.onTapCancel||n.onPointerCancel)});this.removeEndListeners=r(i,a),this.startPress(e,s)},this.startAccessiblePress=()=>{const e=s(this.node.current,"keydown",(e=>{if("Enter"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=s(this.node.current,"keyup",(e=>{"Enter"===e.key&&this.checkPressEnd()&&h("up",((e,s)=>{const{onTap:t}=this.node.getProps();t&&c.update((()=>t(e,s)))}))})),h("down",((e,s)=>{this.startPress(e,s)}))})),t=s(this.node.current,"blur",(()=>{this.isPressing&&h("cancel",((e,s)=>this.cancelPress(e,s)))}));this.removeAccessibleListeners=r(e,t)}}startPress(e,s){this.isPressing=!0;const{onTapStart:t,whileTap:n}=this.node.getProps();n&&this.node.animationState&&this.node.animationState.setActive("whileTap",!0),t&&c.update((()=>t(e,s)))}checkPressEnd(){this.removeEndListeners(),this.isPressing=!1;return this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive("whileTap",!1),!i()}cancelPress(e,s){if(!this.checkPressEnd())return;const{onTapCancel:t}=this.node.getProps();t&&c.update((()=>t(e,s)))}mount(){const e=this.node.getProps(),n=t(this.node.current,"pointerdown",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),i=s(this.node.current,"focus",this.startAccessiblePress);this.removeStartListeners=r(n,i)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}export{p as PressGesture};
