"use strict";var e=require("../../../render/dom/utils/is-css-variable.cjs"),r=require("../../../utils/noop.cjs"),n=require("../color/index.cjs"),o=require("../numbers/index.cjs"),t=require("../utils.cjs");const s={regex:e.cssVariableRegex,countKey:"Vars",token:"${v}",parse:r.noop},u={regex:t.colorRegex,countKey:"Colors",token:"${c}",parse:n.color.parse},a={regex:t.floatRegex,countKey:"Numbers",token:"${n}",parse:o.number.parse};function c(e,{regex:r,countKey:n,token:o,parse:t}){const s=e.tokenised.match(r);s&&(e["num"+n]=s.length,e.tokenised=e.tokenised.replace(r,o),e.values.push(...s.map(t)))}function l(e){const r=e.toString(),n={value:r,tokenised:r,values:[],numVars:0,numColors:0,numNumbers:0};return n.value.includes("var(--")&&c(n,s),c(n,u),c(n,a),n}function i(e){return l(e).values}function m(e){const{values:r,numColors:o,numVars:c,tokenised:i}=l(e),m=r.length;return e=>{let r=i;for(let l=0;l<m;l++)r=l<c?r.replace(s.token,e[l]):l<c+o?r.replace(u.token,n.color.transform(e[l])):r.replace(a.token,t.sanitize(e[l]));return r}}const p=e=>"number"==typeof e?0:e;const g={test:function(e){var r,n;return isNaN(e)&&t.isString(e)&&((null===(r=e.match(t.floatRegex))||void 0===r?void 0:r.length)||0)+((null===(n=e.match(t.colorRegex))||void 0===n?void 0:n.length)||0)>0},parse:i,createTransformer:m,getAnimatableNone:function(e){const r=i(e);return m(e)(r.map(p))}};exports.analyseComplexValue=l,exports.complex=g;
