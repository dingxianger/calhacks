import{circOut as t}from"../../easing/circ.js";import{progress as o}from"../../utils/progress.js";import{mix as i}from"../../utils/mix.js";import{noop as r}from"../../utils/noop.js";import{percent as e,px as p}from"../../value/types/numbers/units.js";const a=["TopLeft","TopRight","BottomLeft","BottomRight"],s=a.length,c=t=>"string"==typeof t?parseFloat(t):t,n=t=>"number"==typeof t||p.test(t);function m(t,o,r,p,m,d){m?(t.opacity=i(0,void 0!==r.opacity?r.opacity:1,f(p)),t.opacityExit=i(void 0!==o.opacity?o.opacity:1,0,y(p))):d&&(t.opacity=i(void 0!==o.opacity?o.opacity:1,void 0!==r.opacity?r.opacity:1,p));for(let m=0;m<s;m++){const s=`border${a[m]}Radius`;let f=u(o,s),y=u(r,s);if(void 0===f&&void 0===y)continue;f||(f=0),y||(y=0);0===f||0===y||n(f)===n(y)?(t[s]=Math.max(i(c(f),c(y),p),0),(e.test(y)||e.test(f))&&(t[s]+="%")):t[s]=y}(o.rotate||r.rotate)&&(t.rotate=i(o.rotate||0,r.rotate||0,p))}function u(t,o){return void 0!==t[o]?t[o]:t.borderRadius}const f=d(0,.5,t),y=d(.5,.95,r);function d(t,i,r){return e=>e<t?0:e>i?1:r(o(t,i,e))}export{m as mixValues};
