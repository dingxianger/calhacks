import{createRenderStep as e}from"./create-render-step.js";import{frameData as r}from"./data.js";let t=!0,s=!1;const a=["read","update","preRender","render","postRender"],n=a.reduce(((r,t)=>(r[t]=e((()=>s=!0)),r)),{}),o=e=>n[e].process(r),i=e=>{s=!1,r.delta=t?1e3/60:Math.max(Math.min(e-r.timestamp,40),1),r.timestamp=e,r.isProcessing=!0,a.forEach(o),r.isProcessing=!1,s&&(t=!1,requestAnimationFrame(i))},c=a.reduce(((e,a)=>{const o=n[a];return e[a]=(e,a=!1,n=!1)=>(s||(s=!0,t=!0,r.isProcessing||requestAnimationFrame(i)),o.schedule(e,a,n)),e}),{});function m(e){a.forEach((r=>n[r].cancel(e)))}export{m as cancelFrame,c as frame,n as steps,a as stepsOrder};
