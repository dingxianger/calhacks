import{cancelFrame as e,frame as t}from"../../../frameloop/index.js";import{animateStyle as r}from"./index.js";import{isWaapiSupportedEasing as o}from"./easing.js";import{supports as a}from"./supports.js";import{getFinalKeyframe as i}from"./utils/get-final-keyframe.js";import{animateValue as n}from"../js/index.js";import{millisecondsToSeconds as s,secondsToMilliseconds as p}from"../../../utils/time-conversion.js";const l=new Set(["opacity","clipPath","filter","transform","backgroundColor"]);function m(m,u,{onUpdate:c,onComplete:f,...d}){if(!(a.waapi()&&l.has(u)&&!d.repeatDelay&&"mirror"!==d.repeatType&&0!==d.damping&&"inertia"!==d.type))return!1;let y,g,h=!1;const j=()=>{g=new Promise((e=>{y=e}))};j();let{keyframes:k,duration:v=300,ease:b,times:w}=d;if(((e,t)=>"spring"===t.type||"backgroundColor"===e||!o(t.ease))(u,d)){const e=n({...d,repeat:0,delay:0});let t={done:!1,value:k[0]};const r=[];let o=0;for(;!t.done&&o<2e4;)t=e.sample(o),r.push(t.value),o+=10;w=void 0,k=r,v=o-10,b="linear"}const x=r(m.owner.current,u,k,{...d,duration:v,ease:b,times:w}),T=()=>x.cancel(),C=()=>{t.update(T),y(),j()};return x.onfinish=()=>{m.set(i(k,d)),f&&f(),C()},{then:(e,t)=>g.then(e,t),get time(){return s(x.currentTime||0)},set time(e){x.currentTime=p(e)},get speed(){return x.playbackRate},set speed(e){x.playbackRate=e},get duration(){return s(v)},play:()=>{h||(x.play(),e(T))},pause:()=>x.pause(),stop:()=>{if(h=!0,"idle"===x.playState)return;const{currentTime:e}=x;if(e){const t=n({...d,autoplay:!1});m.setWithVelocity(t.sample(e-10).value,t.sample(e).value,10)}C()},complete:()=>x.finish(),cancel:C}}export{m as createAcceleratedAnimation};
