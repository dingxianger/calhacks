"use strict";var e=require("../../frameloop/index.cjs"),t=require("../../render/html/utils/transform.cjs"),a=require("../optimized-appear/data-id.cjs"),n=require("./motion-value.cjs"),i=require("../../value/use-will-change/is.cjs"),r=require("../../render/utils/setters.cjs");function o({protectedKeys:e,needsAnimating:t},a){const n=e.hasOwnProperty(a)&&!0!==t[a];return t[a]=!1,n}exports.animateTarget=function(s,l,{delay:u=0,transitionOverride:d,type:c}={}){let{transition:m=s.getDefaultTransition(),transitionEnd:p,...f}=s.makeTargetAnimatable(l);const g=s.getValue("willChange");d&&(m=d);const h=[],A=c&&s.animationState&&s.animationState.getState()[c];for(const r in f){const l=s.getValue(r),d=f[r];if(!l||void 0===d||A&&o(A,r))continue;const c={delay:u,elapsed:0,...m};if(window.HandoffAppearAnimations&&!l.hasAnimated){const t=s.getProps()[a.optimizedAppearDataAttribute];t&&(c.elapsed=window.HandoffAppearAnimations(t,r,l,e.frame))}l.start(n.animateMotionValue(r,l,d,s.shouldReduceMotion&&t.transformProps.has(r)?{type:!1}:c));const p=l.animation;i.isWillChangeMotionValue(g)&&(g.add(r),p.then((()=>g.remove(r)))),h.push(p)}return p&&Promise.all(h).then((()=>{p&&r.setTarget(s,p)})),h};
