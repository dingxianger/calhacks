"use strict";var t=require("../../utils/errors.cjs"),s=require("../pan/PanSession.cjs"),i=require("./utils/lock.cjs"),e=require("../../utils/is-ref-object.cjs"),n=require("../../events/add-pointer-event.cjs"),o=require("./utils/constraints.cjs"),r=require("../../projection/geometry/models.cjs"),a=require("../../projection/utils/each-axis.cjs"),c=require("../../projection/utils/measure.cjs"),l=require("../../events/event-info.cjs"),u=require("../../projection/geometry/conversion.cjs"),h=require("../../events/add-dom-event.cjs"),g=require("../../projection/geometry/delta-calc.cjs"),p=require("../../utils/mix.cjs"),d=require("../../value/types/numbers/units.cjs"),m=require("../../animation/interfaces/motion-value.cjs"),v=require("../../frameloop/index.cjs");const x=new WeakMap;function f(t,s,i){return!(!0!==s&&s!==t||null!==i&&i!==t)}exports.VisualElementDragControls=class{constructor(t){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=r.createBox(),this.visualElement=t}start(t,{snapToCursor:e=!1}={}){const{presenceContext:n}=this.visualElement;if(n&&!1===n.isPresent)return;this.panSession=new s.PanSession(t,{onSessionStart:t=>{this.stopAnimation(),e&&this.snapToCursor(l.extractEventInfo(t,"page").point)},onStart:(t,s)=>{const{drag:e,dragPropagation:n,onDragStart:o}=this.getProps();if(e&&!n&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=i.getGlobalLock(e),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),a.eachAxis((t=>{let s=this.getAxisMotionValue(t).get()||0;if(d.percent.test(s)){const{projection:i}=this.visualElement;if(i&&i.layout){const e=i.layout.layoutBox[t];if(e){s=g.calcLength(e)*(parseFloat(s)/100)}}}this.originPoint[t]=s})),o&&v.frame.update((()=>o(t,s)),!1,!0);const{animationState:r}=this.visualElement;r&&r.setActive("whileDrag",!0)},onMove:(t,s)=>{const{dragPropagation:i,dragDirectionLock:e,onDirectionLock:n,onDrag:o}=this.getProps();if(!i&&!this.openGlobalLock)return;const{offset:r}=s;if(e&&null===this.currentDirection)return this.currentDirection=function(t,s=10){let i=null;Math.abs(t.y)>s?i="y":Math.abs(t.x)>s&&(i="x");return i}(r),void(null!==this.currentDirection&&n&&n(this.currentDirection));this.updateAxis("x",s.point,r),this.updateAxis("y",s.point,r),this.visualElement.render(),o&&o(t,s)},onSessionEnd:(t,s)=>this.stop(t,s)},{transformPagePoint:this.visualElement.getTransformPagePoint()})}stop(t,s){const i=this.isDragging;if(this.cancel(),!i)return;const{velocity:e}=s;this.startAnimation(e);const{onDragEnd:n}=this.getProps();n&&v.frame.update((()=>n(t,s)))}cancel(){this.isDragging=!1;const{projection:t,animationState:s}=this.visualElement;t&&(t.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:i}=this.getProps();!i&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),s&&s.setActive("whileDrag",!1)}updateAxis(t,s,i){const{drag:e}=this.getProps();if(!i||!f(t,e,this.currentDirection))return;const n=this.getAxisMotionValue(t);let r=this.originPoint[t]+i[t];this.constraints&&this.constraints[t]&&(r=o.applyConstraints(r,this.constraints[t],this.elastic[t])),n.set(r)}resolveConstraints(){const{dragConstraints:t,dragElastic:s}=this.getProps(),{layout:i}=this.visualElement.projection||{},n=this.constraints;t&&e.isRefObject(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!i)&&o.calcRelativeConstraints(i.layoutBox,t),this.elastic=o.resolveDragElastic(s),n!==this.constraints&&i&&this.constraints&&!this.hasMutatedConstraints&&a.eachAxis((t=>{this.getAxisMotionValue(t)&&(this.constraints[t]=o.rebaseAxisConstraints(i.layoutBox[t],this.constraints[t]))}))}resolveRefConstraints(){const{dragConstraints:s,onMeasureDragConstraints:i}=this.getProps();if(!s||!e.isRefObject(s))return!1;const n=s.current;t.invariant(null!==n,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");const{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const a=c.measurePageBox(n,r.root,this.visualElement.getTransformPagePoint());let l=o.calcViewportConstraints(r.layout.layoutBox,a);if(i){const t=i(u.convertBoxToBoundingBox(l));this.hasMutatedConstraints=!!t,t&&(l=u.convertBoundingBoxToBox(t))}return l}startAnimation(t){const{drag:s,dragMomentum:i,dragElastic:e,dragTransition:n,dragSnapToOrigin:o,onDragTransitionEnd:r}=this.getProps(),c=this.constraints||{},l=a.eachAxis((r=>{if(!f(r,s,this.currentDirection))return;let a=c&&c[r]||{};o&&(a={min:0,max:0});const l=e?200:1e6,u=e?40:1e7,h={type:"inertia",velocity:i?t[r]:0,bounceStiffness:l,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10,...n,...a};return this.startAxisValueAnimation(r,h)}));return Promise.all(l).then(r)}startAxisValueAnimation(t,s){const i=this.getAxisMotionValue(t);return i.start(m.animateMotionValue(t,i,0,s))}stopAnimation(){a.eachAxis((t=>this.getAxisMotionValue(t).stop()))}getAxisMotionValue(t){const s="_drag"+t.toUpperCase(),i=this.visualElement.getProps(),e=i[s];return e||this.visualElement.getValue(t,(i.initial?i.initial[t]:void 0)||0)}snapToCursor(t){a.eachAxis((s=>{const{drag:i}=this.getProps();if(!f(s,i,this.currentDirection))return;const{projection:e}=this.visualElement,n=this.getAxisMotionValue(s);if(e&&e.layout){const{min:i,max:o}=e.layout.layoutBox[s];n.set(t[s]-p.mix(i,o,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:t,dragConstraints:s}=this.getProps(),{projection:i}=this.visualElement;if(!e.isRefObject(s)||!i||!this.constraints)return;this.stopAnimation();const n={x:0,y:0};a.eachAxis((t=>{const s=this.getAxisMotionValue(t);if(s){const i=s.get();n[t]=o.calcOrigin({min:i,max:i},this.constraints[t])}}));const{transformTemplate:r}=this.visualElement.getProps();this.visualElement.current.style.transform=r?r({},""):"none",i.root&&i.root.updateScroll(),i.updateLayout(),this.resolveConstraints(),a.eachAxis((s=>{if(!f(s,t,null))return;const i=this.getAxisMotionValue(s),{min:e,max:o}=this.constraints[s];i.set(p.mix(e,o,n[s]))}))}addListeners(){if(!this.visualElement.current)return;x.set(this.visualElement,this);const t=this.visualElement.current,s=n.addPointerEvent(t,"pointerdown",(t=>{const{drag:s,dragListener:i=!0}=this.getProps();s&&i&&this.start(t)})),i=()=>{const{dragConstraints:t}=this.getProps();e.isRefObject(t)&&(this.constraints=this.resolveRefConstraints())},{projection:o}=this.visualElement,r=o.addEventListener("measure",i);o&&!o.layout&&(o.root&&o.root.updateScroll(),o.updateLayout()),i();const c=h.addDomEvent(window,"resize",(()=>this.scalePositionWithinConstraints())),l=o.addEventListener("didUpdate",(({delta:t,hasLayoutChanged:s})=>{this.isDragging&&s&&(a.eachAxis((s=>{const i=this.getAxisMotionValue(s);i&&(this.originPoint[s]+=t[s].translate,i.set(i.get()+t[s].translate))})),this.visualElement.render())}));return()=>{c(),s(),r(),l&&l()}}getProps(){const t=this.visualElement.getProps(),{drag:s=!1,dragDirectionLock:i=!1,dragPropagation:e=!1,dragConstraints:n=!1,dragElastic:r=o.defaultElastic,dragMomentum:a=!0}=t;return{...t,drag:s,dragDirectionLock:i,dragPropagation:e,dragConstraints:n,dragElastic:r,dragMomentum:a}}},exports.elementDragControls=x;
