import{frame as e}from"../../../frameloop/index.js";import o,{useContext as t}from"react";import{usePresence as r}from"../../../components/AnimatePresence/use-presence.js";import{LayoutGroupContext as s}from"../../../context/LayoutGroupContext.js";import{SwitchLayoutGroupContext as i}from"../../../context/SwitchLayoutGroupContext.js";import{globalProjectionState as n}from"../../../projection/node/state.js";import{correctBorderRadius as p}from"../../../projection/styles/scale-border-radius.js";import{correctBoxShadow as a}from"../../../projection/styles/scale-box-shadow.js";import{addScaleCorrector as d}from"../../../projection/styles/scale-correction.js";class m extends o.Component{componentDidMount(){const{visualElement:e,layoutGroup:o,switchLayoutGroup:t,layoutId:r}=this.props,{projection:s}=e;d(c),s&&(o.group&&o.group.add(s),t&&t.register&&r&&t.register(s),s.root.didUpdate(),s.addEventListener("animationComplete",(()=>{this.safeToRemove()})),s.setOptions({...s.options,onExitComplete:()=>this.safeToRemove()})),n.hasEverUpdated=!0}getSnapshotBeforeUpdate(o){const{layoutDependency:t,visualElement:r,drag:s,isPresent:i}=this.props,n=r.projection;return n?(n.isPresent=i,s||o.layoutDependency!==t||void 0===t?n.willUpdate():this.safeToRemove(),o.isPresent!==i&&(i?n.promote():n.relegate()||e.postRender((()=>{const e=n.getStack();e&&e.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),queueMicrotask((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:o,switchLayoutGroup:t}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),o&&o.group&&o.group.remove(r),t&&t.deregister&&t.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function u(e){const[n,p]=r(),a=t(s);return o.createElement(m,{...e,layoutGroup:a,switchLayoutGroup:t(i),isPresent:n,safeToRemove:p})}const c={borderRadius:{...p,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:p,borderTopRightRadius:p,borderBottomLeftRadius:p,borderBottomRightRadius:p,boxShadow:a};export{u as MeasureLayout};
