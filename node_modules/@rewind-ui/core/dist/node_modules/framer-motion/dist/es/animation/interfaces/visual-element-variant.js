import{resolveVariant as r}from"../../render/utils/resolve-dynamic-variants.js";import{animateTarget as e}from"./visual-element-target.js";function t(i,o,a={}){const s=r(i,o,a.custom);let{transition:l=i.getDefaultTransition()||{}}=s||{};a.transitionOverride&&(l=a.transitionOverride);const m=s?()=>Promise.all(e(i,s,a)):()=>Promise.resolve(),d=i.variantChildren&&i.variantChildren.size?(r=0)=>{const{delayChildren:e=0,staggerChildren:s,staggerDirection:m}=l;return function(r,e,i=0,o=0,a=1,s){const l=[],m=(r.variantChildren.size-1)*o,d=1===a?(r=0)=>r*o:(r=0)=>m-r*o;return Array.from(r.variantChildren).sort(n).forEach(((r,n)=>{r.notify("AnimationStart",e),l.push(t(r,e,{...s,delay:i+d(n)}).then((()=>r.notify("AnimationComplete",e))))})),Promise.all(l)}(i,o,e+r,s,m,a)}:()=>Promise.resolve(),{when:u}=l;if(u){const[r,e]="beforeChildren"===u?[m,d]:[d,m];return r().then((()=>e()))}return Promise.all([m(),d(a.delay)])}function n(r,e){return r.sortNodePosition(e)}export{t as animateVariant,n as sortByTreeOrder};
