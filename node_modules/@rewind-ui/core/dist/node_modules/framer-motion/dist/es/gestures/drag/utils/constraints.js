import{progress as n}from"../../../utils/progress.js";import{calcLength as m}from"../../../projection/geometry/delta-calc.js";import{clamp as i}from"../../../utils/clamp.js";import{mix as t}from"../../../utils/mix.js";function o(n,{min:m,max:i},o){return void 0!==m&&n<m?n=o?t(m,n,o.min):Math.max(n,m):void 0!==i&&n>i&&(n=o?t(i,n,o.max):Math.min(n,i)),n}function r(n,m,i){return{min:void 0!==m?n.min+m:void 0,max:void 0!==i?n.max+i-(n.max-n.min):void 0}}function x(n,{top:m,left:i,bottom:t,right:o}){return{x:r(n.x,i,o),y:r(n.y,m,t)}}function u(n,m){let i=m.min-n.min,t=m.max-n.max;return m.max-m.min<n.max-n.min&&([i,t]=[t,i]),{min:i,max:t}}function a(n,m){return{x:u(n.x,m.x),y:u(n.y,m.y)}}function e(t,o){let r=.5;const x=m(t),u=m(o);return u>x?r=n(o.min,o.max-x,t.min):x>u&&(r=n(t.min,t.max-u,o.min)),i(0,1,r)}function c(n,m){const i={};return void 0!==m.min&&(i.min=m.min-n.min),void 0!==m.max&&(i.max=m.max-n.min),i}const f=.35;function s(n=.35){return!1===n?n=0:!0===n&&(n=f),{x:p(n,"left","right"),y:p(n,"top","bottom")}}function p(n,m,i){return{min:l(n,m),max:l(n,i)}}function l(n,m){return"number"==typeof n?n:n[m]||0}export{o as applyConstraints,e as calcOrigin,r as calcRelativeAxisConstraints,x as calcRelativeConstraints,u as calcViewportAxisConstraints,a as calcViewportConstraints,f as defaultElastic,c as rebaseAxisConstraints,p as resolveAxisElastic,s as resolveDragElastic,l as resolvePointElastic};
