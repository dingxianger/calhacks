import{invariant as t}from"../../utils/errors.js";import{PanSession as s}from"../pan/PanSession.js";import{getGlobalLock as i}from"./utils/lock.js";import{isRefObject as n}from"../../utils/is-ref-object.js";import{addPointerEvent as o}from"../../events/add-pointer-event.js";import{applyConstraints as e,calcRelativeConstraints as r,resolveDragElastic as a,calcViewportConstraints as l,rebaseAxisConstraints as c,calcOrigin as u,defaultElastic as h}from"./utils/constraints.js";import{createBox as p}from"../../projection/geometry/models.js";import{eachAxis as g}from"../../projection/utils/each-axis.js";import{measurePageBox as m}from"../../projection/utils/measure.js";import{extractEventInfo as d}from"../../events/event-info.js";import{convertBoxToBoundingBox as f,convertBoundingBoxToBox as v}from"../../projection/geometry/conversion.js";import{addDomEvent as P}from"../../events/add-dom-event.js";import{calcLength as E}from"../../projection/geometry/delta-calc.js";import{mix as x}from"../../utils/mix.js";import{percent as j}from"../../value/types/numbers/units.js";import{animateMotionValue as y}from"../../animation/interfaces/motion-value.js";import{frame as D}from"../../frameloop/index.js";const A=new WeakMap;class C{constructor(t){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=p(),this.visualElement=t}start(t,{snapToCursor:n=!1}={}){const{presenceContext:o}=this.visualElement;if(o&&!1===o.isPresent)return;this.panSession=new s(t,{onSessionStart:t=>{this.stopAnimation(),n&&this.snapToCursor(d(t,"page").point)},onStart:(t,s)=>{const{drag:n,dragPropagation:o,onDragStart:e}=this.getProps();if(n&&!o&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=i(n),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),g((t=>{let s=this.getAxisMotionValue(t).get()||0;if(j.test(s)){const{projection:i}=this.visualElement;if(i&&i.layout){const n=i.layout.layoutBox[t];if(n){s=E(n)*(parseFloat(s)/100)}}}this.originPoint[t]=s})),e&&D.update((()=>e(t,s)),!1,!0);const{animationState:r}=this.visualElement;r&&r.setActive("whileDrag",!0)},onMove:(t,s)=>{const{dragPropagation:i,dragDirectionLock:n,onDirectionLock:o,onDrag:e}=this.getProps();if(!i&&!this.openGlobalLock)return;const{offset:r}=s;if(n&&null===this.currentDirection)return this.currentDirection=function(t,s=10){let i=null;Math.abs(t.y)>s?i="y":Math.abs(t.x)>s&&(i="x");return i}(r),void(null!==this.currentDirection&&o&&o(this.currentDirection));this.updateAxis("x",s.point,r),this.updateAxis("y",s.point,r),this.visualElement.render(),e&&e(t,s)},onSessionEnd:(t,s)=>this.stop(t,s)},{transformPagePoint:this.visualElement.getTransformPagePoint()})}stop(t,s){const i=this.isDragging;if(this.cancel(),!i)return;const{velocity:n}=s;this.startAnimation(n);const{onDragEnd:o}=this.getProps();o&&D.update((()=>o(t,s)))}cancel(){this.isDragging=!1;const{projection:t,animationState:s}=this.visualElement;t&&(t.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:i}=this.getProps();!i&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),s&&s.setActive("whileDrag",!1)}updateAxis(t,s,i){const{drag:n}=this.getProps();if(!i||!M(t,n,this.currentDirection))return;const o=this.getAxisMotionValue(t);let r=this.originPoint[t]+i[t];this.constraints&&this.constraints[t]&&(r=e(r,this.constraints[t],this.elastic[t])),o.set(r)}resolveConstraints(){const{dragConstraints:t,dragElastic:s}=this.getProps(),{layout:i}=this.visualElement.projection||{},o=this.constraints;t&&n(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!i)&&r(i.layoutBox,t),this.elastic=a(s),o!==this.constraints&&i&&this.constraints&&!this.hasMutatedConstraints&&g((t=>{this.getAxisMotionValue(t)&&(this.constraints[t]=c(i.layoutBox[t],this.constraints[t]))}))}resolveRefConstraints(){const{dragConstraints:s,onMeasureDragConstraints:i}=this.getProps();if(!s||!n(s))return!1;const o=s.current;t(null!==o,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");const{projection:e}=this.visualElement;if(!e||!e.layout)return!1;const r=m(o,e.root,this.visualElement.getTransformPagePoint());let a=l(e.layout.layoutBox,r);if(i){const t=i(f(a));this.hasMutatedConstraints=!!t,t&&(a=v(t))}return a}startAnimation(t){const{drag:s,dragMomentum:i,dragElastic:n,dragTransition:o,dragSnapToOrigin:e,onDragTransitionEnd:r}=this.getProps(),a=this.constraints||{},l=g((r=>{if(!M(r,s,this.currentDirection))return;let l=a&&a[r]||{};e&&(l={min:0,max:0});const c=n?200:1e6,u=n?40:1e7,h={type:"inertia",velocity:i?t[r]:0,bounceStiffness:c,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10,...o,...l};return this.startAxisValueAnimation(r,h)}));return Promise.all(l).then(r)}startAxisValueAnimation(t,s){const i=this.getAxisMotionValue(t);return i.start(y(t,i,0,s))}stopAnimation(){g((t=>this.getAxisMotionValue(t).stop()))}getAxisMotionValue(t){const s="_drag"+t.toUpperCase(),i=this.visualElement.getProps(),n=i[s];return n||this.visualElement.getValue(t,(i.initial?i.initial[t]:void 0)||0)}snapToCursor(t){g((s=>{const{drag:i}=this.getProps();if(!M(s,i,this.currentDirection))return;const{projection:n}=this.visualElement,o=this.getAxisMotionValue(s);if(n&&n.layout){const{min:i,max:e}=n.layout.layoutBox[s];o.set(t[s]-x(i,e,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:t,dragConstraints:s}=this.getProps(),{projection:i}=this.visualElement;if(!n(s)||!i||!this.constraints)return;this.stopAnimation();const o={x:0,y:0};g((t=>{const s=this.getAxisMotionValue(t);if(s){const i=s.get();o[t]=u({min:i,max:i},this.constraints[t])}}));const{transformTemplate:e}=this.visualElement.getProps();this.visualElement.current.style.transform=e?e({},""):"none",i.root&&i.root.updateScroll(),i.updateLayout(),this.resolveConstraints(),g((s=>{if(!M(s,t,null))return;const i=this.getAxisMotionValue(s),{min:n,max:e}=this.constraints[s];i.set(x(n,e,o[s]))}))}addListeners(){if(!this.visualElement.current)return;A.set(this.visualElement,this);const t=this.visualElement.current,s=o(t,"pointerdown",(t=>{const{drag:s,dragListener:i=!0}=this.getProps();s&&i&&this.start(t)})),i=()=>{const{dragConstraints:t}=this.getProps();n(t)&&(this.constraints=this.resolveRefConstraints())},{projection:e}=this.visualElement,r=e.addEventListener("measure",i);e&&!e.layout&&(e.root&&e.root.updateScroll(),e.updateLayout()),i();const a=P(window,"resize",(()=>this.scalePositionWithinConstraints())),l=e.addEventListener("didUpdate",(({delta:t,hasLayoutChanged:s})=>{this.isDragging&&s&&(g((s=>{const i=this.getAxisMotionValue(s);i&&(this.originPoint[s]+=t[s].translate,i.set(i.get()+t[s].translate))})),this.visualElement.render())}));return()=>{a(),s(),r(),l&&l()}}getProps(){const t=this.visualElement.getProps(),{drag:s=!1,dragDirectionLock:i=!1,dragPropagation:n=!1,dragConstraints:o=!1,dragElastic:e=h,dragMomentum:r=!0}=t;return{...t,drag:s,dragDirectionLock:i,dragPropagation:n,dragConstraints:o,dragElastic:e,dragMomentum:r}}}function M(t,s,i){return!(!0!==s&&s!==t||null!==i&&i!==t)}export{C as VisualElementDragControls,A as elementDragControls};
