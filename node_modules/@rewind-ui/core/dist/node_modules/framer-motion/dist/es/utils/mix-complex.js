import{mix as r}from"./mix.js";import{mixColor as o}from"./mix-color.js";import{pipe as t}from"./pipe.js";import{warning as e}from"./errors.js";import{color as n}from"../value/types/color/index.js";import{complex as s,analyseComplexValue as m}from"../value/types/complex/index.js";const a=(r,o)=>t=>`${t>0?o:r}`;function i(t,e){return"number"==typeof t?o=>r(t,e,o):n.test(t)?o(t,e):t.startsWith("var(")?a(t,e):c(t,e)}const u=(r,o)=>{const t=[...r],e=t.length,n=r.map(((r,t)=>i(r,o[t])));return r=>{for(let o=0;o<e;o++)t[o]=n[o](r);return t}},l=(r,o)=>{const t={...r,...o},e={};for(const n in t)void 0!==r[n]&&void 0!==o[n]&&(e[n]=i(r[n],o[n]));return r=>{for(const o in e)t[o]=e[o](r);return t}},c=(r,o)=>{const n=s.createTransformer(o),i=m(r),l=m(o);return i.numVars===l.numVars&&i.numColors===l.numColors&&i.numNumbers>=l.numNumbers?t(u(i.values,l.values),n):(e(!0,`Complex values '${r}' and '${o}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),a(r,o))};export{u as mixArray,c as mixComplex,l as mixObject};
