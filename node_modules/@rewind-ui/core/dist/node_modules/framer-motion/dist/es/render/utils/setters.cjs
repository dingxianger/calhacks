"use strict";var e=require("../../utils/is-numerical-string.cjs"),t=require("../../utils/is-zero-value-string.cjs"),r=require("../../utils/resolve-value.cjs"),n=require("../../value/index.cjs"),i=require("../../value/types/complex/index.cjs"),a=require("../dom/value-types/animatable-none.cjs"),s=require("../dom/value-types/find.cjs"),l=require("./resolve-dynamic-variants.cjs");function o(e,t,r){e.hasValue(t)?e.getValue(t).set(r):e.addValue(t,n.motionValue(r))}function u(e,t){if(!t)return;return(t[e]||t.default||t).from}exports.checkTargetForNewValues=function(r,l,o){var u,c;const d=Object.keys(l).filter((e=>!r.hasValue(e))),f=d.length;if(f)for(let g=0;g<f;g++){const f=d[g],v=l[f];let m=null;Array.isArray(v)&&(m=v[0]),null===m&&(m=null!==(c=null!==(u=o[f])&&void 0!==u?u:r.readValue(f))&&void 0!==c?c:l[f]),null!=m&&("string"==typeof m&&(e.isNumericalString(m)||t.isZeroValueString(m))?m=parseFloat(m):!s.findValueType(m)&&i.complex.test(v)&&(m=a.getAnimatableNone(f,v)),r.addValue(f,n.motionValue(m,{owner:r})),void 0===o[f]&&(o[f]=m),null!==m&&r.setBaseTarget(f,m))}},exports.getOrigin=function(e,t,r){const n={};for(const i in e){const e=u(i,t);if(void 0!==e)n[i]=e;else{const e=r.getValue(i);e&&(n[i]=e.get())}}return n},exports.getOriginFromTransition=u,exports.setTarget=function(e,t){const n=l.resolveVariant(e,t);let{transitionEnd:i={},transition:a={},...s}=n?e.makeTargetAnimatable(n,!1):{};s={...s,...i};for(const t in s){o(e,t,r.resolveFinalValueInKeyframes(s[t]))}};
