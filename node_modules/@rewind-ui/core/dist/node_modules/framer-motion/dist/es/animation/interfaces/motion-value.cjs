"use strict";var e=require("../../utils/errors.cjs"),t=require("../../utils/time-conversion.cjs"),a=require("../../utils/use-instant-transition-state.cjs"),i=require("../animators/waapi/create-accelerated-animation.cjs"),n=require("../animators/instant.cjs"),s=require("../utils/default-transitions.cjs"),r=require("../utils/is-animatable.cjs"),o=require("../utils/keyframes.cjs"),l=require("../utils/transitions.cjs"),u=require("../animators/js/index.cjs");exports.animateMotionValue=(c,m,d,p={})=>y=>{const f=l.getValueTransition(p,c)||{},j=f.delay||p.delay||0;let{elapsed:q=0}=p;q-=t.secondsToMilliseconds(j);const g=o.getKeyframes(m,c,d,f),T=g[0],b=g[g.length-1],v=r.isAnimatable(c,T),A=r.isAnimatable(c,b);e.warning(v===A,`You are trying to animate ${c} from "${T}" to "${b}". ${T} is not an animatable value - to enable this animation set ${T} to a value animatable to ${b} via the \`style\` property.`);let $={keyframes:g,velocity:m.getVelocity(),ease:"easeOut",...f,delay:-q,onUpdate:e=>{m.set(e),f.onUpdate&&f.onUpdate(e)},onComplete:()=>{y(),f.onComplete&&f.onComplete()}};if(l.isTransitionDefined(f)||($={...$,...s.getDefaultTransition(c,$)}),$.duration&&($.duration=t.secondsToMilliseconds($.duration)),$.repeatDelay&&($.repeatDelay=t.secondsToMilliseconds($.repeatDelay)),!v||!A||a.instantAnimationState.current||!1===f.type)return n.createInstantAnimation($);if(m.owner&&m.owner.current instanceof HTMLElement&&!m.owner.getProps().onUpdate){const e=i.createAcceleratedAnimation(m,c,$);if(e)return e}return u.animateValue($)};
