"use strict";var e=require("./errors.cjs"),r=require("../value/types/color/index.cjs"),t=require("./clamp.cjs"),o=require("./mix.cjs"),s=require("./mix-color.cjs"),i=require("./mix-complex.cjs"),n=require("./pipe.cjs"),c=require("./progress.cjs"),u=require("./noop.cjs");const p=(e,r)=>t=>o.mix(e,r,t);function l(e,t,o){const c=[],l=o||("number"==typeof(a=e[0])?p:"string"==typeof a?r.color.test(a)?s.mixColor:i.mixComplex:Array.isArray(a)?i.mixArray:"object"==typeof a?i.mixObject:p);var a;const m=e.length-1;for(let r=0;r<m;r++){let o=l(e[r],e[r+1]);if(t){const e=Array.isArray(t)?t[r]||u.noop:t;o=n.pipe(e,o)}c.push(o)}return c}exports.interpolate=function(r,o,{clamp:s=!0,ease:i,mixer:n}={}){const u=r.length;if(e.invariant(u===o.length,"Both input and output ranges must be the same length"),1===u)return()=>o[0];r[0]>r[u-1]&&(r=[...r].reverse(),o=[...o].reverse());const p=l(o,i,n),a=p.length,m=e=>{let t=0;if(a>1)for(;t<r.length-2&&!(e<r[t+1]);t++);const o=c.progress(r[t],r[t+1],e);return p[t](o)};return s?e=>m(t.clamp(r[0],r[u-1],e)):m};
